#Setup and configuration using Powershell for the Azure Automation Exercise


#Create and configure the Virtual Network and Network Security Groups
# Variables
$rgName = "rosalio-onboarding"
$location = "East US"
$vnetName = "foxhouse"
$subnetName = "foxsub01"
$nsgName = "foxNSG"
$rule4EgressIP = "65.140.106.2" 

# Create and configure the Virtual Network and subnet
$subnetConfig = New-AzVirtualNetworkSubnetConfig -Name $subnetName -AddressPrefix "10.0.0.0/24"
$vnet = New-AzVirtualNetwork -Name $vnetName -ResourceGroupName $rgName -Location $location -AddressPrefix "10.0.0.0/16" -Subnet $subnetConfig
# Create a Network Security Group (NSG)
$nsg = New-AzNetworkSecurityGroup -ResourceGroupName $rgName -Location $location -Name $nsgName
# Add NSG rule to allow traffic from Rule4's egress IP only
$ruleName = "AllowRule4Egress"
$priority = 100 
$portRange = "443"  # Only HTTPS traffic
Add-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg -Name $ruleName -Priority $priority -Access Allow -Direction Inbound -Protocol Tcp -SourceAddressPrefix $rule4EgressIP -SourcePortRange "*" -DestinationAddressPrefix "*" -DestinationPortRange $portRange
# Update the NSG
$nsg | Set-AzNetworkSecurityGroup
# Update subnet configuration with the NSG
$subnetConfig = New-AzVirtualNetworkSubnetConfig -Name $subnetName -AddressPrefix "10.0.0.0/24" -NetworkSecurityGroup $nsg
# Update the Virtual Network with the new subnet configuration
$vnet = Set-AzVirtualNetwork -VirtualNetwork $vnet
# Output the result
Write-Output "Virtual Network, NSG, and NSG rule created successfully"


#Deploy a windows server vm as the Domain Controller 
$vmName = "foxvm01"
$pip = New-AzPublicIpAddress -Name "$vmName-pip" -ResourceGroupName $rgName -Location $location -AllocationMethod Dynamic
$nic = New-AzNetworkInterface -Name "$vmName-nic" -ResourceGroupName $rgName -Location $location -SubnetId $vnet.Subnets[0].Id -PublicIpAddressId $pip.Id
$vmConfig = New-AzVMConfig -VMName $vmName -VMSize "Standard_DS2_v2"
$vm = Set-AzVMOperatingSystem -VM $vmConfig -Windows -ComputerName $vmName -Credential (Get-Credential) -ProvisionVMAgent -EnableAutoUpdate
$vm = Set-AzVMSourceImage -VM $vm -PublisherName "MicrosoftWindowsServer" -Offer "WindowsServer" -Skus "2019-Datacenter" -Version "latest"
$vm = Add-AzVMNetworkInterface -VM $vm -Id $nic.Id
$vm = Set-AzVMOSDisk -VM $vm -CreateOption FromImage -DiskSizeInGB 64
New-AzVM -ResourceGroupName $rgName -Location $location -VM $vm

#Configure Active Directory Domain Services on the VM once deployed.
Install-WindowsFeature -Name AD-Domain-Services -IncludeManagementTools
Install-ADDSForest -DomainName "fox.local" -SafeModeAdministratorPassword (ConvertTo-SecureString -String 'foxlocal' -AsPlainText -Force) -Force:$true


# Script to deploy  Django App VM & Variables for Django App VM
$djangoVmName = "foxweb01"
$djangoPip = New-AzPublicIpAddress -Name "$djangoVmName-pip" -ResourceGroupName $rgName -Location $location -AllocationMethod Dynamic
$djangoNic = New-AzNetworkInterface -Name "$djangoVmName-nic" -ResourceGroupName $rgName -Location $location -SubnetId $vnet.Subnets[0].Id -PublicIpAddressId $djangoPip.Id
$djangoVmConfig = New-AzVMConfig -VMName $djangoVmName -VMSize "Standard_DS2_v2"
$adminUsername = "fox"
$adminPassword = ConvertTo-SecureString 'fox' -AsPlainText -Force
# Set the operating system and image for the Django VM
$djangoVmConfig = Set-AzVMOperatingSystem -VM $djangoVmConfig -Linux -ComputerName $djangoVmName -Credential (New-Object System.Management.Automation.PSCredential ($adminUsername, $adminPassword))
$djangoVmConfig = Set-AzVMSourceImage -VM $djangoVmConfig -PublisherName "Canonical" -Offer "UbuntuServer" -Skus "18.04-LTS" -Version "latest"
# Add network interface
$djangoVmConfig = Add-AzVMNetworkInterface -VM $djangoVmConfig -Id $djangoNic.Id
# Set the OS disk
$djangoVmConfig = Set-AzVMOSDisk -VM $djangoVmConfig -CreateOption FromImage -DiskSizeInGB 64 -Caching "ReadWrite"
# Create the VM
New-AzVM -ResourceGroupName $rgName -Location $location -VM $djangoVmConfig




# Create a Key Vault
$keyVaultName = "fox-keyvault"
$keyVault = New-AzKeyVault -VaultName $keyVaultName -ResourceGroupName $rgName -Location $location
# Store the Django admin password in the Key Vault
$secretValue = ConvertTo-SecureString 'fox' -AsPlainText -Force
$secret = Set-AzKeyVaultSecret -VaultName $keyVaultName -Name 'DjangoAdminPassword' -SecretValue $secretValue



