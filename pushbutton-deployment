param(
    [string]$rgName = "DefaultResourceGroup",
    [string]$location = "East US",
    [string]$vnetName = "DefaultVNet",
    [string]$subnetName = "DefaultSubnet",
    [string]$nsgName = "DefaultNSG",
    [string]$rule4EgressIP = "0.0.0.0",  # Replace with the actual egress IP
    [string]$vmName = "DefaultVM",
    [string]$domainControllerVmName = "dc01",
    [string]$djangoVmName = "django01",
    [string]$keyVaultName = "DefaultKeyVault",
    [string]$adminUsername = "adminUser",
    [string]$adminPassword = "adminPassword",  # Consider fetching from a secure source like Azure Key Vault
    [string]$domainName = "example.local",
    [string]$safeModeAdminPassword = "SafeModePassword"  # Consider fetching from a secure source
)

# Network configuration
$subnetConfig = New-AzVirtualNetworkSubnetConfig -Name $subnetName -AddressPrefix "10.0.0.0/24"
$vnet = New-AzVirtualNetwork -Name $vnetName -ResourceGroupName $rgName -Location $location -AddressPrefix "10.0.0.0/16" -Subnet $subnetConfig

# Create NSG and rules
$nsg = New-AzNetworkSecurityGroup -ResourceGroupName $rgName -Location $location -Name $nsgName
Add-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg -Name "AllowHTTPS" -Priority 100 -Access Allow -Direction Inbound -Protocol Tcp -SourceAddressPrefix $rule4EgressIP -SourcePortRange "*" -DestinationAddressPrefix "*" -DestinationPortRange "443"
$nsg | Set-AzNetworkSecurityGroup

# Update subnet with NSG
$subnetConfig = New-AzVirtualNetworkSubnetConfig -Name $subnetName -AddressPrefix "10.0.0.0/24" -NetworkSecurityGroup $nsg
$vnet = Set-AzVirtualNetwork -VirtualNetwork $vnet

# Deploy Domain Controller VM
$vmConfig = New-AzVMConfig -VMName $domainControllerVmName -VMSize "Standard_DS2_v2"
# Add other VM configuration here...

# Deploy Django VM
$djangoVmConfig = New-AzVMConfig -VMName $djangoVmName -VMSize "Standard_DS2_v2"
# Add other VM configuration here...

# Key Vault for storing secrets
$keyVault = New-AzKeyVault -VaultName $keyVaultName -ResourceGroupName $rgName -Location $location
Set-AzKeyVaultSecret -VaultName $keyVaultName -Name 'AdminPassword' -SecretValue (ConvertTo-SecureString -String $adminPassword -AsPlainText -Force)

# Output completion message
Write-Output "Resources created successfully with specified parameters"
